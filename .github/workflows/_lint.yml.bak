name: Lint

# This workflow runs code quality checks
# It ensures code follows style guidelines and formatting standards

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  eslint:
    runs-on: ubuntu-latest
    name: ESLint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        id: eslint
        run: npx eslint . --ext .js,.jsx --format json --output-file eslint-report.json
        continue-on-error: true # During initial setup, this might fail until ESLint is fully configured
      
      - name: Upload ESLint report
        uses: actions/upload-artifact@v3
        with:
          name: eslint-report
          path: eslint-report.json
      
      - name: Fail if ESLint has errors
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          ERROR_COUNT=$(grep -o '"errorCount":[0-9]*' eslint-report.json | grep -o '[0-9]*')
          if [ "$ERROR_COUNT" -gt 0 ]; then
            echo "ESLint found $ERROR_COUNT errors that need to be fixed"
            exit 1
          fi
          
  prettier:
    runs-on: ubuntu-latest
    name: Prettier
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check formatting
        id: prettier
        run: npx prettier --check "**/*.{js,jsx,json,md}"
        continue-on-error: true # Don't fail the build yet
      
      - name: Create formatting report
        if: always()
        run: |
          if [ ${{ steps.prettier.outcome }} == 'success' ]; then
            echo "✅ Prettier check passed - code is properly formatted" > prettier-report.txt
          else
            echo "❌ Prettier check failed - code needs formatting" > prettier-report.txt
            echo "Run 'npm run format' locally to fix formatting issues" >> prettier-report.txt
          fi
      
      - name: Upload Prettier report
        uses: actions/upload-artifact@v3
        with:
          name: prettier-report
          path: prettier-report.txt
      
      - name: Fail if Prettier has errors on main PRs
        if: steps.prettier.outcome == 'failure' && github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          echo "Prettier check failed - code must be properly formatted for PRs to main"
          exit 1
        
  report:
    needs: [eslint, prettier]
    runs-on: ubuntu-latest
    name: Lint Report
    if: always()
    
    steps:
      - name: Download ESLint report
        uses: actions/download-artifact@v3
        with:
          name: eslint-report
      
      - name: Download Prettier report
        uses: actions/download-artifact@v3
        with:
          name: prettier-report
          
      - name: Create lint summary
        run: |
          echo "# Lint Results Summary" > lint-summary.md
          echo "" >> lint-summary.md
          
          if [ -f eslint-report.json ]; then
            ERROR_COUNT=$(grep -o '"errorCount":[0-9]*' eslint-report.json | grep -o '[0-9]*')
            WARNING_COUNT=$(grep -o '"warningCount":[0-9]*' eslint-report.json | grep -o '[0-9]*')
            
            echo "## ESLint Results" >> lint-summary.md
            echo "- Errors: $ERROR_COUNT" >> lint-summary.md
            echo "- Warnings: $WARNING_COUNT" >> lint-summary.md
            
            if [ "$ERROR_COUNT" -gt 0 ]; then
              echo "⚠️ ESLint found $ERROR_COUNT errors that need to be fixed" >> lint-summary.md
            else
              echo "✅ ESLint passed with no errors" >> lint-summary.md
            fi
            
            if [ "$WARNING_COUNT" -gt 0 ]; then
              echo "⚠️ ESLint found $WARNING_COUNT warnings to review" >> lint-summary.md
            fi
          else
            echo "⚠️ ESLint report not found" >> lint-summary.md
          fi
          
          echo "" >> lint-summary.md
          echo "## Prettier Results" >> lint-summary.md
          if [ -f prettier-report.txt ]; then
            cat prettier-report.txt >> lint-summary.md
          else
            echo "⚠️ Prettier report not found" >> lint-summary.md
          fi
          
          echo "" >> lint-summary.md
          echo "See the full reports in the artifacts section" >> lint-summary.md
          
      - name: Publish lint summary
        uses: actions/upload-artifact@v3
        with:
          name: lint-summary
          path: lint-summary.md
      
      - name: Add lint comment to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('lint-summary.md', 'utf8');
            const issue_number = context.issue.number;
            
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
